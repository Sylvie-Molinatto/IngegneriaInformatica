; DATA SECTION
     .data

v1: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v2: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v3: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v4: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v5: .space 480 ; 8byte*60=480byte
v6: .space 480
v7: .space 480

; CODE SECTION
     .text
main:

daddi r3,r0,20 ; contatore j
daddui r4,r0,v1
daddui r5,r0,v2
daddui r6,r0,v3
daddui r7,r0,v4
daddui r8,r0,v5
daddui r9,r0,v6
daddui r10,r0,v7

loop:
l.d f4, 0(r4) ; carico il valore v1[i] in r4
l.d f5, 0(r5) ; carico il valore v2[i] in r5
l.d f6, 0(r6)
l.d f7, 0(r7)
add.d f8,f4,f5 ; effettuo la somma v1[i]+v2[i] 
mul.d f11,f7,f4 ; effettuo v4[i]*v1[i]    
add.d f13,f5,f6  ; effettuo la somma v2[i]+v3[i]      
mul.d f9,f8,f6 ; effettuo (v1[i]+v2[i])*v3[i]
add.d f10,f9,f7 ; effettuo ((v1[i]+v2[i])*v3[i])+v4[i]
div.d f12,f10,f11
s.d f10, 0(r8)
mul.d f14,f12,f13
s.d f12, 0(r9)
s.d f14, 0(r10)


l.d f4, 8(r4) ; carico il valore v1[i] in r4
l.d f5, 8(r5) ; carico il valore v2[i] in r5
l.d f6, 8(r6)
l.d f7, 8(r7)
add.d f8,f4,f5 ; effettuo la somma v1[i]+v2[i] 
mul.d f11,f7,f4 ; effettuo v4[i]*v1[i]    
add.d f13,f5,f6         
mul.d f9,f8,f6 ; effettuo (v1[i]+v2[i])*v3[i]
add.d f10,f9,f7 ; effettuo ((v1[i]+v2[i])*v3[i])+v4[i]
div.d f12,f10,f11
s.d f10, 8(r8)
mul.d f14,f12,f13
s.d f12, 8(r9)
s.d f14, 8(r10)

l.d f4, 16(r4) ; carico il valore v1[i] in r4
l.d f5, 16(r5) ; carico il valore v2[i] in r5
l.d f6, 16(r6)
l.d f7, 16(r7)
add.d f8,f4,f5 ; effettuo la somma v1[i]+v2[i] 
mul.d f11,f7,f4 ; effettuo v4[i]*v1[i]    
add.d f13,f5,f6         
mul.d f9,f8,f6 ; effettuo (v1[i]+v2[i])*v3[i]
add.d f10,f9,f7 ; effettuo ((v1[i]+v2[i])*v3[i])+v4[i]
div.d f12,f10,f11
s.d f10, 16(r8)
mul.d f14,f12,f13
s.d f12, 16(r9)
s.d f14, 16(r10)

daddi r3,r3,-1
daddi r8,r8,24
daddi r9,r9,24
daddi r10,r10,24

bnez r3,loop
nop

endloop:
halt