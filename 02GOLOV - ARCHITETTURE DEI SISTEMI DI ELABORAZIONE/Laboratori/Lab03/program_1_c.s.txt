; DATA SECTION
     .data

v1: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v2: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v3: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v4: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v5: .space 480 ; 8byte*60=480byte
v6: .space 480
v7: .space 480

; CODE SECTION
     .text
main:

dadd r2,r0,r0 ; pointer 1
daddi r3,r0,20 ; contatore j
daddi r4,r0,8; pointer 2
daddi r5,r0,16; pointer 3

loop: 
l.d f1, v1(r2) ; carico il valore v1[i] in f1
l.d f2, v2(r2) ; carico il valore v2[i] in f2
l.d f3, v3(r2) ; carico il calore v3[i] in f3
l.d f4, v4(r2) ; carico il valore v4[i] in f4
add.d f5,f1,f2 ; effettuo la somma v1[i]+v2[i] 
mul.d f6,f4,f1 ; effettuo v4[i]*v1[i]    
add.d f7,f2,f3 ; effettuo v2[i]+v3[i]

l.d f12, v1(r4) ; carico il valore v1[i] in f12   
l.d f13, v2(r4) ; carico il valore v2[i] in f13
l.d f14, v3(r4) ; carico il valore v3[i] in f14

mul.d f8,f5,f3 ; effettuo (v1[i]+v2[i])*v3[i]
l.d f15, v4(r4) ; carico il valore v4[i] in f15
add.d f16,f12,f13 ; effettuo la somma v1[i]+v2[i] 
add.d f9,f8,f4 ; effettuo v5[i]=((v1[i]+v2[i])*v3[i])+v4[i]    
mul.d f17,f15,f12 ; effettuo v4[i]*v1[i]
add.d f18,f13,f14 ; effettuo v2[i]+v3[i]
div.d f10,f9,f6 ; effettuo v6[i]=v5[i]/(v4[i]*v1[i])
s.d f9, v5(r2)   ;
mul.d f11,f10,f7 ; effettuo v7[i]=v6[i]*(v2[i]+v3[i])
s.d f10, v6(r2)
s.d f11, v7(r2)



l.d f23, v1(r5) ; carico il valore v1[i] in f23
l.d f24, v2(r5) ; carico il valore v2[i] in f24
l.d f25, v3(r5) ; carico il valore v3[i] in f25

mul.d f19,f16,f14 ; effettuo (v1[i]+v2[i])*v3[i]
l.d f26, v4(r5) ; carico il valore v4[i] in f22
add.d f27,f23,f24 ; effettuo la somma v1[i]+v2[i]       
add.d f20,f19,f15 ; effettuo ((v1[i]+v2[i])*v3[i])+v4[i]
mul.d f28,f26,f23 ; effettuo v4[i]*v1[i]    
add.d f29,f24,f25 ; effettuo v2[i]+v3[i]      
div.d f21,f20,f17 ; effettuo v5[i]/(v4[i]*v1[i])
s.d f20, v5(r4)
mul.d f22,f21,f18 ;effettuo v7[i]=v6[i]*(v2[i]+v3[i])
s.d f21, v6(r4)
s.d f22, v7(r4)

mul.d f27,f27,f25 ; effettuo (v1[i]+v2[i])*v3[i]
add.d f27,f27,f26 ; effettuo ((v1[i]+v2[i])*v3[i])+v4[i]
div.d f30,f27,f28 ; effettuo v6[i]=v5[i]/(v4[i]*v1[i])
s.d f27, v5(r5)
mul.d f31,f30,f29  ;effettuo v7[i]=v6[i]*(v2[i]+v3[i])
s.d f30, v6(r5)
s.d f31, v7(r5)
daddi r3,r3,-1
daddi r4,r4,24
daddi r5,r5,24
bnez r3,loop
daddi r2,r2,24

endloop:
halt