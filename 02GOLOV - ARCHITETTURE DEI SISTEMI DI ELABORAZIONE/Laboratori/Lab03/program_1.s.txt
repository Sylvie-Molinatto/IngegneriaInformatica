; DATA SECTION
     .data

v1: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v2: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v3: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v4: .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1,5.1,6.1,7.1,8.1
    .double  1.1,2.1,3.1,4.1

v5: .space 480 ; 8byte*60=480byte
v6: .space 480
v7: .space 480

; CODE SECTION
     .text
main:

; dadd r1,r0,r0 ; contatore i
dadd r2,r0,r0 ; pointer
daddi r3,r0,60 ; contatore j

loop:
l.d f4, v1(r2) ; carico il valore v1[i] in r4
l.d f5, v2(r2) ; carico il valore v2[i] in r5
l.d f6, v3(r2)
l.d f7, v4(r2)
add.d f8,f4,f5 ; effettuo la somma v1[i]+v2[i]
mul.d f9,f8,f6 ; effettuo (v1[i]+v2[i])*v3[i]
add.d f10,f9,f7
s.d f10, v5(r2)
mul.d f11,f7,f4
div.d f12,f10,f11
s.d f12, v6(r2)
add.d f13,f5,f6
mul.d f14,f12,f13
s.d f14, v7(r2)

;daddi r1,r1,1
daddi r3,r3,-1
daddi r2,r2,8
bnez r3,loop
nop

endloop:

halt

 