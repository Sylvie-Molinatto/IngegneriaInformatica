


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004                 AREA             Static_data, DATA, READONLY, AL
IGN=3
  120 00000000         
  121 00000000 00000001 
              0000001E 
              00000002 
              00000046 



ARM Macro Assembler    Page 4 


              00000003 
              000000C8 
              00000004 
              0000002A 
              00000005 
              00000051 Ingredient_calories
                               DCD              0x01, 30, 0x02, 70, 0x03, 200, 
0x04, 42, 0x05, 81
  122 00000028 00000006 
              00000014         DCD              0x06, 20
  123 00000030 00000002 
              00000032 
              00000005 
              00000003 
              00000003 
              0000000A 
              00000001 
              00000005 
              00000004 Ingredient_quantity
                               DCD              0x02, 50, 0x05, 3, 0x03, 10, 0x
01, 5, 0x04
  124 00000054 00000008 
              00000006 
              0000001E         DCD              8, 0x06, 30
  125 00000060         
  126 00000060                 AREA             Result, DATA,READWRITE, ALIGN=3
  127 00000000         
  128 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 Calories_ordered
                               SPACE            6*4
  129 00000018 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 Quantity_ordered
                               SPACE            6*4
  130 00000030         
  131 00000030 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 ordered1
                               SPACE            12*4
  132 00000060 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 ordered2
                               SPACE            12*4
  133 00000090         
  134 00000090         
  135 00000090                 AREA             |.text|, CODE, READONLY, align=
3
  136 00000000         
  137 00000000         
  138 00000000         ; Reset Handler
  139 00000000         
  140 00000000         ; definition of symbolic constants
  141 00000000 0000000C 
                       ELEMENTS
                               EQU              12
  142 00000000         
  143 00000000         ; Register alias
  144 00000000        0 
                       calories
                               RN               0           ; R0 -> calories
  145 00000000        1 
                       ordered_cal
                               RN               1           ; R1 -> ordered_cal
                                                            
  146 00000000        2 
                       quantity
                               RN               2           ; R2 -> quantity
  147 00000000        3 
                       ordered_qt
                               RN               3           ; R3 -> ordered_qt
  148 00000000        4 
                       i       RN               4           ; R4 -> i
  149 00000000        5 
                       j       RN               5           ; R5 -> j
  150 00000000         
  151 00000000         
  152 00000000         Reset_Handler
                               PROC
  153 00000000                 EXPORT           Reset_Handler             [WEAK
]
  154 00000000         



ARM Macro Assembler    Page 6 


  155 00000000 4855            LDR              calories, =Ingredient_calories
  156 00000002 4956            LDR              ordered_cal, =ordered1
  157 00000004 4A56            LDR              quantity, =Ingredient_quantity
  158 00000006 4B57            LDR              ordered_qt, =ordered2
  159 00000008         
  160 00000008 F04F 0400       MOV              i, #0
  161 0000000C F04F 0500       MOV              j, #0
  162 00000010         
  163 00000010         ; your code here
  164 00000010 F850 6024 
                       ciclo   LDR              r6, [calories, i, lsl #2] ; in 
                                                            questo ciclo ho cop
                                                            iato il vettore nel
                                                            l'area readwrite
  165 00000014 F841 6024       STR              r6, [ordered_cal, i, lsl #2]
  166 00000018 F852 7024       LDR              r7, [quantity, i, lsl #2]
  167 0000001C F843 7024       STR              r7, [ordered_qt, i, lsl #2]
  168 00000020 F104 0401       add              i, i, #1
  169 00000024 2C0C            cmp              i, #ELEMENTS
  170 00000026 D3F3            blo              ciclo
  171 00000028 F04F 0400       mov              i, #0
  172 0000002C         
  173 0000002C         
  174 0000002C         ; ora posso procedere all'ordinamento
  175 0000002C EB05 0B04 
                       ciclo_j add              r11,j,i     ; sommo i e j
  176 00000030 F1BB 0F09       cmp              r11,#9      ; confronto 11 con 
                                                            i+j
  177 00000034 BFA8 2500       movge            j, #0
  178 00000038 DA41            bge              ciclo_i
  179 0000003A         
  180 0000003A F105 0601       add              r6,j,#1
  181 0000003E F851 7025       LDR              r7, [ordered_cal, j, lsl #2] 
                                                            ; ordered_cal[j]
  182 00000042 F851 8026       LDR              r8, [ordered_cal, r6, lsl #2] 
                                                            ; ordered_cal[j+1]
  183 00000046 F106 0601       add              r6,r6,#1
  184 0000004A F851 9026       LDR              r9, [ordered_cal, r6, lsl #2] 
                                                            ; ordered_cal[j+2]
  185 0000004E F106 0601       add              r6,r6,#1
  186 00000052 F851 A026       LDR              r10, [ordered_cal, r6, lsl #2] 
                                                            ; ordered_cal[j+3]
  187 00000056 45D0            cmp              r8,r10
  188 00000058 D310            blo              if_condition_1
  189 0000005A         
  190 0000005A F105 0601 
                       ciclo_j_2
                               add              r6,j,#1
  191 0000005E F853 7025       LDR              r7, [ordered_qt, j, lsl #2] 
                                                            ; ordered_qt[j]
  192 00000062 F853 8026       LDR              r8, [ordered_qt, r6, lsl #2] 
                                                            ; ordered_qt[j+1]
  193 00000066 F106 0601       add              r6,r6,#1
  194 0000006A F853 9026       LDR              r9, [ordered_qt, r6, lsl #2] 
                                                            ; ordered_qt[j+2]
  195 0000006E F106 0601       add              r6,r6,#1
  196 00000072 F853 A026       LDR              r10, [ordered_qt, r6, lsl #2] 
                                                            ; ordered_qt[j+3]
  197 00000076 45D0            cmp              r8,r10



ARM Macro Assembler    Page 7 


  198 00000078 D30F            blo              if_condition_2
  199 0000007A         ;add j, j, #2 ; incremento j
  200 0000007A E01D            b                end_ciclo_j
  201 0000007C         
  202 0000007C         
  203 0000007C F841 9025 
                       if_condition_1
                               STR              r9, [ordered_cal, j, lsl #2] ; 
                                                             ordered_cal[j]=ord
                                                            ered_cal[j+2];
  204 00000080 F1A6 0602       sub              r6, r6, #2
  205 00000084 F841 A026       STR              r10, [ordered_cal, r6, lsl #2] 
                                                            ;  ordered_cal[j+1]
                                                            =ordered_cal[j+3];
  206 00000088 F106 0601       add              r6, r6, #1
  207 0000008C F841 7026       STR              r7, [ordered_cal, r6, lsl #2] ;
                                                              ordered_cal[j+2]=
                                                            tmp2
  208 00000090 F106 0601       add              r6, r6, #1
  209 00000094 F841 8026       STR              r8, [ordered_cal, r6, lsl #2] ;
                                                              ordered_cal[j+3]=
                                                            tmp1
  210 00000098 E7DF            b                ciclo_j_2
  211 0000009A         
  212 0000009A F843 9025 
                       if_condition_2
                               STR              r9, [ordered_qt, j, lsl #2] ;  
                                                            ordered_qt[j]=order
                                                            ed_qt[j+2];
  213 0000009E F1A6 0602       sub              r6, r6, #2
  214 000000A2 F843 A026       STR              r10, [ordered_qt, r6, lsl #2] ;
                                                              ordered_qt[j+1]=o
                                                            rdered_qt[j+3];
  215 000000A6 F106 0601       add              r6, r6, #1
  216 000000AA F843 7026       STR              r7, [ordered_qt, r6, lsl #2] ; 
                                                             ordered_qt[j+2]=tm
                                                            p2
  217 000000AE F106 0601       add              r6, r6, #1
  218 000000B2 F843 8026       STR              r8, [ordered_qt, r6, lsl #2] ; 
                                                             ordered_qt[j+3]=tm
                                                            p1
  219 000000B6 E7FF            b                end_ciclo_j
  220 000000B8         
  221 000000B8 F105 0502 
                       end_ciclo_j
                               add              j, j, #2
  222 000000BC E7B6            b                ciclo_j
  223 000000BE         
  224 000000BE F104 0401 
                       ciclo_i add              i, i, #1
  225 000000C2 2C0C            cmp              i, #ELEMENTS
  226 000000C4 D3B2            blo              ciclo_j
  227 000000C6 F04F 0400       mov              i, #0
  228 000000CA F04F 0500       mov              j, #0
  229 000000CE E7FF            b                save
  230 000000D0         
  231 000000D0 4825    save    LDR              calories, =Calories_ordered
  232 000000D2 4A26            LDR              quantity, =Quantity_ordered
  233 000000D4 F851 6024       LDR              r6, [ordered_cal, i, lsl #2]



ARM Macro Assembler    Page 8 


  234 000000D8 F853 7024       LDR              r7, [ordered_qt, i, lsl #2]
  235 000000DC F840 6025       STR              r6, [calories, j, lsl #2]
  236 000000E0 F842 7025       STR              r7, [quantity, j, lsl #2]
  237 000000E4 F104 0402       add              i, i, #2
  238 000000E8 F105 0501       add              j, j, #1
  239 000000EC 2C0C            cmp              i, #ELEMENTS
  240 000000EE D3EF            blo              save
  241 000000F0 E7FF            b                calcolaMax
  242 000000F2         
  243 000000F2         
  244 000000F2 4819    calcolaMax
                               LDR              calories, =Ingredient_calories
  245 000000F4 4A1A            LDR              quantity, =Ingredient_quantity
  246 000000F6 F04F 0400       mov              i, #0
  247 000000FA F04F 0500       mov              j, #0
  248 000000FE F04F 0A00       mov              r10, #0     ;max
  249 00000102         
  250 00000102 2D0C    cicloMax
                               cmp              j, #ELEMENTS
  251 00000104 D01C            beq              fine
  252 00000106 F850 6024       LDR              R6, [calories, i, lsl #2]
  253 0000010A F852 7025       LDR              R7, [quantity, j, lsl #2]
  254 0000010E 42BE            cmp              R6,R7       ; confronto i codic
                                                            i degli ingredienti
                                                            
  255 00000110 BF18 1CAD       addne            j, j, #2
  256 00000114 D1F5            bne              cicloMax    ; se non sono ugual
                                                            i aumento il contat
                                                            ore i di 2
  257 00000116         
  258 00000116 F104 0801       add              R8, i, #1
  259 0000011A F850 8028       LDR              R8, [calories,r8,lsl#2]
  260 0000011E F105 0901       add              r9, j, #1
  261 00000122 F852 9029       LDR              R9, [quantity,r9,lsl#2]
  262 00000126 FB09 F908       mul              R9, R9, R8
  263 0000012A 45D1            cmp              r9,r10
  264 0000012C BFA4 46CA       movge            r10,r9
  265 00000130 46B3            movge            r11,r6
  266 00000132 F104 0402       add              i, i, #2
  267 00000136 2C0C            cmp              i, #ELEMENTS
  268 00000138 D002            beq              fine
  269 0000013A BF18 2500       movne            j, #0
  270 0000013E D3E0            blo              cicloMax
  271 00000140         
  272 00000140         ;     for(int j=0; j<12; j+2){
  273 00000140         ;         if(calories[j]==quantity[j]){
  274 00000140         ;              if(calories[j]*quantity[j]>max){
  275 00000140         ;                     max=calories[j]*quantity[j];
  276 00000140         ;              }
  277 00000140         ;         }
  278 00000140         ;     }
  279 00000140         
  280 00000140         
  281 00000140         
  282 00000140 4700    fine    BX               R0
  283 00000142                 ENDP
  284 00000142         
  285 00000142         
  286 00000142         ; Dummy Exception Handlers (infinite loops which can be 



ARM Macro Assembler    Page 9 


                       modified)
  287 00000142         
  288 00000142         NMI_Handler
                               PROC
  289 00000142                 EXPORT           NMI_Handler               [WEAK
]
  290 00000142 E7FE            B                .
  291 00000144                 ENDP
  293 00000144         HardFault_Handler
                               PROC
  294 00000144                 EXPORT           HardFault_Handler         [WEAK
]
  295 00000144 E7FE            B                .
  296 00000146                 ENDP
  298 00000146         MemManage_Handler
                               PROC
  299 00000146                 EXPORT           MemManage_Handler         [WEAK
]
  300 00000146 E7FE            B                .
  301 00000148                 ENDP
  303 00000148         BusFault_Handler
                               PROC
  304 00000148                 EXPORT           BusFault_Handler          [WEAK
]
  305 00000148 E7FE            B                .
  306 0000014A                 ENDP
  308 0000014A         UsageFault_Handler
                               PROC
  309 0000014A                 EXPORT           UsageFault_Handler        [WEAK
]
  310 0000014A E7FE            B                .
  311 0000014C                 ENDP
  312 0000014C         SVC_Handler
                               PROC
  313 0000014C                 EXPORT           SVC_Handler               [WEAK
]
  314 0000014C E7FE            B                .
  315 0000014E                 ENDP
  317 0000014E         DebugMon_Handler
                               PROC
  318 0000014E                 EXPORT           DebugMon_Handler          [WEAK
]
  319 0000014E E7FE            B                .
  320 00000150                 ENDP
  321 00000150         PendSV_Handler
                               PROC
  322 00000150                 EXPORT           PendSV_Handler            [WEAK
]
  323 00000150 E7FE            B                .
  324 00000152                 ENDP
  325 00000152         SysTick_Handler
                               PROC
  326 00000152                 EXPORT           SysTick_Handler           [WEAK
]
  327 00000152 E7FE            B                .
  328 00000154                 ENDP
  329 00000154         
  330 00000154         Default_Handler
                               PROC



ARM Macro Assembler    Page 10 


  331 00000154         
  332 00000154                 EXPORT           WDT_IRQHandler            [WEAK
]
  333 00000154                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  334 00000154                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  335 00000154                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  336 00000154                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  337 00000154                 EXPORT           UART0_IRQHandler          [WEAK
]
  338 00000154                 EXPORT           UART1_IRQHandler          [WEAK
]
  339 00000154                 EXPORT           UART2_IRQHandler          [WEAK
]
  340 00000154                 EXPORT           UART3_IRQHandler          [WEAK
]
  341 00000154                 EXPORT           PWM1_IRQHandler           [WEAK
]
  342 00000154                 EXPORT           I2C0_IRQHandler           [WEAK
]
  343 00000154                 EXPORT           I2C1_IRQHandler           [WEAK
]
  344 00000154                 EXPORT           I2C2_IRQHandler           [WEAK
]
  345 00000154                 EXPORT           SPI_IRQHandler            [WEAK
]
  346 00000154                 EXPORT           SSP0_IRQHandler           [WEAK
]
  347 00000154                 EXPORT           SSP1_IRQHandler           [WEAK
]
  348 00000154                 EXPORT           PLL0_IRQHandler           [WEAK
]
  349 00000154                 EXPORT           RTC_IRQHandler            [WEAK
]
  350 00000154                 EXPORT           EINT0_IRQHandler          [WEAK
]
  351 00000154                 EXPORT           EINT1_IRQHandler          [WEAK
]
  352 00000154                 EXPORT           EINT2_IRQHandler          [WEAK
]
  353 00000154                 EXPORT           EINT3_IRQHandler          [WEAK
]
  354 00000154                 EXPORT           ADC_IRQHandler            [WEAK
]
  355 00000154                 EXPORT           BOD_IRQHandler            [WEAK
]
  356 00000154                 EXPORT           USB_IRQHandler            [WEAK
]
  357 00000154                 EXPORT           CAN_IRQHandler            [WEAK
]
  358 00000154                 EXPORT           DMA_IRQHandler            [WEAK
]
  359 00000154                 EXPORT           I2S_IRQHandler            [WEAK
]
  360 00000154                 EXPORT           ENET_IRQHandler           [WEAK
]



ARM Macro Assembler    Page 11 


  361 00000154                 EXPORT           RIT_IRQHandler            [WEAK
]
  362 00000154                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  363 00000154                 EXPORT           QEI_IRQHandler            [WEAK
]
  364 00000154                 EXPORT           PLL1_IRQHandler           [WEAK
]
  365 00000154                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  366 00000154                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  367 00000154         
  368 00000154         WDT_IRQHandler
  369 00000154         TIMER0_IRQHandler
  370 00000154         TIMER1_IRQHandler
  371 00000154         TIMER2_IRQHandler
  372 00000154         TIMER3_IRQHandler
  373 00000154         UART0_IRQHandler
  374 00000154         UART1_IRQHandler
  375 00000154         UART2_IRQHandler
  376 00000154         UART3_IRQHandler
  377 00000154         PWM1_IRQHandler
  378 00000154         I2C0_IRQHandler
  379 00000154         I2C1_IRQHandler
  380 00000154         I2C2_IRQHandler
  381 00000154         SPI_IRQHandler
  382 00000154         SSP0_IRQHandler
  383 00000154         SSP1_IRQHandler
  384 00000154         PLL0_IRQHandler
  385 00000154         RTC_IRQHandler
  386 00000154         EINT0_IRQHandler
  387 00000154         EINT1_IRQHandler
  388 00000154         EINT2_IRQHandler
  389 00000154         EINT3_IRQHandler
  390 00000154         ADC_IRQHandler
  391 00000154         BOD_IRQHandler
  392 00000154         USB_IRQHandler
  393 00000154         CAN_IRQHandler
  394 00000154         DMA_IRQHandler
  395 00000154         I2S_IRQHandler
  396 00000154         ENET_IRQHandler
  397 00000154         RIT_IRQHandler
  398 00000154         MCPWM_IRQHandler
  399 00000154         QEI_IRQHandler
  400 00000154         PLL1_IRQHandler
  401 00000154         USBActivity_IRQHandler
  402 00000154         CANActivity_IRQHandler
  403 00000154         
  404 00000154 E7FE            B                .
  405 00000156         
  406 00000156                 ENDP
  407 00000156         
  408 00000156         
  409 00000156 00 00           ALIGN
  410 00000158         
  411 00000158         
  412 00000158         ; User Initial Stack & Heap
  413 00000158         



ARM Macro Assembler    Page 12 


  414 00000158                 EXPORT           __initial_sp
  415 00000158                 EXPORT           __heap_base
  416 00000158                 EXPORT           __heap_limit
  417 00000158         
  418 00000158                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\startup.d -o.\startup.o -I.\RTE\_Target_1 -IC:\Users\ASUS\AppDat
a\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\ASUS\AppData\Lo
cal\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefin
e="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\startup.lst startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file startup.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file startup.s
   Uses
      At line 59 in file startup.s
      At line 414 in file startup.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file startup.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup.s
   Uses
      At line 415 in file startup.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file startup.s
   Uses
      At line 416 in file startup.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file startup.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file startup.s
   Uses
      At line 57 in file startup.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file startup.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file startup.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Ingredient_calories 00000000

Symbol: Ingredient_calories
   Definitions
      At line 121 in file startup.s
   Uses
      At line 155 in file startup.s
      At line 244 in file startup.s

Ingredient_quantity 00000030

Symbol: Ingredient_quantity
   Definitions
      At line 123 in file startup.s
   Uses
      At line 157 in file startup.s
      At line 245 in file startup.s

Static_data 00000000

Symbol: Static_data
   Definitions
      At line 119 in file startup.s
   Uses
      None
Comment: Static_data unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Calories_ordered 00000000

Symbol: Calories_ordered
   Definitions
      At line 128 in file startup.s
   Uses
      At line 231 in file startup.s
Comment: Calories_ordered used once
Quantity_ordered 00000018

Symbol: Quantity_ordered
   Definitions
      At line 129 in file startup.s
   Uses
      At line 232 in file startup.s
Comment: Quantity_ordered used once
Result 00000000

Symbol: Result
   Definitions
      At line 126 in file startup.s
   Uses
      None
Comment: Result unused
ordered1 00000030

Symbol: ordered1
   Definitions
      At line 131 in file startup.s
   Uses
      At line 156 in file startup.s
Comment: ordered1 used once
ordered2 00000060

Symbol: ordered2
   Definitions
      At line 132 in file startup.s
   Uses
      At line 158 in file startup.s
Comment: ordered2 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 135 in file startup.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 00000154

Symbol: ADC_IRQHandler
   Definitions
      At line 390 in file startup.s
   Uses
      At line 99 in file startup.s
      At line 354 in file startup.s

BOD_IRQHandler 00000154

Symbol: BOD_IRQHandler
   Definitions
      At line 391 in file startup.s
   Uses
      At line 100 in file startup.s
      At line 355 in file startup.s

BusFault_Handler 00000148

Symbol: BusFault_Handler
   Definitions
      At line 303 in file startup.s
   Uses
      At line 64 in file startup.s
      At line 304 in file startup.s

CANActivity_IRQHandler 00000154

Symbol: CANActivity_IRQHandler
   Definitions
      At line 402 in file startup.s
   Uses
      At line 111 in file startup.s
      At line 366 in file startup.s

CAN_IRQHandler 00000154

Symbol: CAN_IRQHandler
   Definitions
      At line 393 in file startup.s
   Uses
      At line 102 in file startup.s
      At line 357 in file startup.s

DMA_IRQHandler 00000154

Symbol: DMA_IRQHandler
   Definitions
      At line 394 in file startup.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 103 in file startup.s
      At line 358 in file startup.s

DebugMon_Handler 0000014E

Symbol: DebugMon_Handler
   Definitions
      At line 317 in file startup.s
   Uses
      At line 71 in file startup.s
      At line 318 in file startup.s

Default_Handler 00000154

Symbol: Default_Handler
   Definitions
      At line 330 in file startup.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 00000154

Symbol: EINT0_IRQHandler
   Definitions
      At line 386 in file startup.s
   Uses
      At line 95 in file startup.s
      At line 350 in file startup.s

EINT1_IRQHandler 00000154

Symbol: EINT1_IRQHandler
   Definitions
      At line 387 in file startup.s
   Uses
      At line 96 in file startup.s
      At line 351 in file startup.s

EINT2_IRQHandler 00000154

Symbol: EINT2_IRQHandler
   Definitions
      At line 388 in file startup.s
   Uses
      At line 97 in file startup.s
      At line 352 in file startup.s

EINT3_IRQHandler 00000154

Symbol: EINT3_IRQHandler
   Definitions
      At line 389 in file startup.s
   Uses
      At line 98 in file startup.s
      At line 353 in file startup.s

ENET_IRQHandler 00000154

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 396 in file startup.s
   Uses
      At line 105 in file startup.s
      At line 360 in file startup.s

HardFault_Handler 00000144

Symbol: HardFault_Handler
   Definitions
      At line 293 in file startup.s
   Uses
      At line 62 in file startup.s
      At line 294 in file startup.s

I2C0_IRQHandler 00000154

Symbol: I2C0_IRQHandler
   Definitions
      At line 378 in file startup.s
   Uses
      At line 87 in file startup.s
      At line 342 in file startup.s

I2C1_IRQHandler 00000154

Symbol: I2C1_IRQHandler
   Definitions
      At line 379 in file startup.s
   Uses
      At line 88 in file startup.s
      At line 343 in file startup.s

I2C2_IRQHandler 00000154

Symbol: I2C2_IRQHandler
   Definitions
      At line 380 in file startup.s
   Uses
      At line 89 in file startup.s
      At line 344 in file startup.s

I2S_IRQHandler 00000154

Symbol: I2S_IRQHandler
   Definitions
      At line 395 in file startup.s
   Uses
      At line 104 in file startup.s
      At line 359 in file startup.s

MCPWM_IRQHandler 00000154

Symbol: MCPWM_IRQHandler
   Definitions
      At line 398 in file startup.s
   Uses
      At line 107 in file startup.s
      At line 362 in file startup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


MemManage_Handler 00000146

Symbol: MemManage_Handler
   Definitions
      At line 298 in file startup.s
   Uses
      At line 63 in file startup.s
      At line 299 in file startup.s

NMI_Handler 00000142

Symbol: NMI_Handler
   Definitions
      At line 288 in file startup.s
   Uses
      At line 61 in file startup.s
      At line 289 in file startup.s

PLL0_IRQHandler 00000154

Symbol: PLL0_IRQHandler
   Definitions
      At line 384 in file startup.s
   Uses
      At line 93 in file startup.s
      At line 348 in file startup.s

PLL1_IRQHandler 00000154

Symbol: PLL1_IRQHandler
   Definitions
      At line 400 in file startup.s
   Uses
      At line 109 in file startup.s
      At line 364 in file startup.s

PWM1_IRQHandler 00000154

Symbol: PWM1_IRQHandler
   Definitions
      At line 377 in file startup.s
   Uses
      At line 86 in file startup.s
      At line 341 in file startup.s

PendSV_Handler 00000150

Symbol: PendSV_Handler
   Definitions
      At line 321 in file startup.s
   Uses
      At line 73 in file startup.s
      At line 322 in file startup.s

QEI_IRQHandler 00000154

Symbol: QEI_IRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 399 in file startup.s
   Uses
      At line 108 in file startup.s
      At line 363 in file startup.s

RIT_IRQHandler 00000154

Symbol: RIT_IRQHandler
   Definitions
      At line 397 in file startup.s
   Uses
      At line 106 in file startup.s
      At line 361 in file startup.s

RTC_IRQHandler 00000154

Symbol: RTC_IRQHandler
   Definitions
      At line 385 in file startup.s
   Uses
      At line 94 in file startup.s
      At line 349 in file startup.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 152 in file startup.s
   Uses
      At line 60 in file startup.s
      At line 153 in file startup.s

SPI_IRQHandler 00000154

Symbol: SPI_IRQHandler
   Definitions
      At line 381 in file startup.s
   Uses
      At line 90 in file startup.s
      At line 345 in file startup.s

SSP0_IRQHandler 00000154

Symbol: SSP0_IRQHandler
   Definitions
      At line 382 in file startup.s
   Uses
      At line 91 in file startup.s
      At line 346 in file startup.s

SSP1_IRQHandler 00000154

Symbol: SSP1_IRQHandler
   Definitions
      At line 383 in file startup.s
   Uses
      At line 92 in file startup.s
      At line 347 in file startup.s




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

SVC_Handler 0000014C

Symbol: SVC_Handler
   Definitions
      At line 312 in file startup.s
   Uses
      At line 70 in file startup.s
      At line 313 in file startup.s

SysTick_Handler 00000152

Symbol: SysTick_Handler
   Definitions
      At line 325 in file startup.s
   Uses
      At line 74 in file startup.s
      At line 326 in file startup.s

TIMER0_IRQHandler 00000154

Symbol: TIMER0_IRQHandler
   Definitions
      At line 369 in file startup.s
   Uses
      At line 78 in file startup.s
      At line 333 in file startup.s

TIMER1_IRQHandler 00000154

Symbol: TIMER1_IRQHandler
   Definitions
      At line 370 in file startup.s
   Uses
      At line 79 in file startup.s
      At line 334 in file startup.s

TIMER2_IRQHandler 00000154

Symbol: TIMER2_IRQHandler
   Definitions
      At line 371 in file startup.s
   Uses
      At line 80 in file startup.s
      At line 335 in file startup.s

TIMER3_IRQHandler 00000154

Symbol: TIMER3_IRQHandler
   Definitions
      At line 372 in file startup.s
   Uses
      At line 81 in file startup.s
      At line 336 in file startup.s

UART0_IRQHandler 00000154

Symbol: UART0_IRQHandler
   Definitions
      At line 373 in file startup.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 82 in file startup.s
      At line 337 in file startup.s

UART1_IRQHandler 00000154

Symbol: UART1_IRQHandler
   Definitions
      At line 374 in file startup.s
   Uses
      At line 83 in file startup.s
      At line 338 in file startup.s

UART2_IRQHandler 00000154

Symbol: UART2_IRQHandler
   Definitions
      At line 375 in file startup.s
   Uses
      At line 84 in file startup.s
      At line 339 in file startup.s

UART3_IRQHandler 00000154

Symbol: UART3_IRQHandler
   Definitions
      At line 376 in file startup.s
   Uses
      At line 85 in file startup.s
      At line 340 in file startup.s

USBActivity_IRQHandler 00000154

Symbol: USBActivity_IRQHandler
   Definitions
      At line 401 in file startup.s
   Uses
      At line 110 in file startup.s
      At line 365 in file startup.s

USB_IRQHandler 00000154

Symbol: USB_IRQHandler
   Definitions
      At line 392 in file startup.s
   Uses
      At line 101 in file startup.s
      At line 356 in file startup.s

UsageFault_Handler 0000014A

Symbol: UsageFault_Handler
   Definitions
      At line 308 in file startup.s
   Uses
      At line 65 in file startup.s
      At line 309 in file startup.s

WDT_IRQHandler 00000154



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols


Symbol: WDT_IRQHandler
   Definitions
      At line 368 in file startup.s
   Uses
      At line 77 in file startup.s
      At line 332 in file startup.s

calcolaMax 000000F2

Symbol: calcolaMax
   Definitions
      At line 244 in file startup.s
   Uses
      At line 241 in file startup.s
Comment: calcolaMax used once
ciclo 00000010

Symbol: ciclo
   Definitions
      At line 164 in file startup.s
   Uses
      At line 170 in file startup.s
Comment: ciclo used once
cicloMax 00000102

Symbol: cicloMax
   Definitions
      At line 250 in file startup.s
   Uses
      At line 256 in file startup.s
      At line 270 in file startup.s

ciclo_i 000000BE

Symbol: ciclo_i
   Definitions
      At line 224 in file startup.s
   Uses
      At line 178 in file startup.s
Comment: ciclo_i used once
ciclo_j 0000002C

Symbol: ciclo_j
   Definitions
      At line 175 in file startup.s
   Uses
      At line 222 in file startup.s
      At line 226 in file startup.s

ciclo_j_2 0000005A

Symbol: ciclo_j_2
   Definitions
      At line 190 in file startup.s
   Uses
      At line 210 in file startup.s
Comment: ciclo_j_2 used once
end_ciclo_j 000000B8



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols


Symbol: end_ciclo_j
   Definitions
      At line 221 in file startup.s
   Uses
      At line 200 in file startup.s
      At line 219 in file startup.s

fine 00000140

Symbol: fine
   Definitions
      At line 282 in file startup.s
   Uses
      At line 251 in file startup.s
      At line 268 in file startup.s

if_condition_1 0000007C

Symbol: if_condition_1
   Definitions
      At line 203 in file startup.s
   Uses
      At line 188 in file startup.s
Comment: if_condition_1 used once
if_condition_2 0000009A

Symbol: if_condition_2
   Definitions
      At line 212 in file startup.s
   Uses
      At line 198 in file startup.s
Comment: if_condition_2 used once
save 000000D0

Symbol: save
   Definitions
      At line 231 in file startup.s
   Uses
      At line 229 in file startup.s
      At line 240 in file startup.s

58 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ELEMENTS 0000000C

Symbol: ELEMENTS
   Definitions
      At line 141 in file startup.s
   Uses
      At line 169 in file startup.s
      At line 225 in file startup.s
      At line 239 in file startup.s
      At line 250 in file startup.s
      At line 267 in file startup.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file startup.s
   Uses
      At line 46 in file startup.s
Comment: Heap_Size used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file startup.s
   Uses
      At line 34 in file startup.s
Comment: Stack_Size used once
3 symbols
424 symbols in table
