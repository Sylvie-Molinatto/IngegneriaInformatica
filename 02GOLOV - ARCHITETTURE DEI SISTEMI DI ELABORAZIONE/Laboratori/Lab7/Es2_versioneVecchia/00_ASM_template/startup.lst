


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ********************//**
    2 00000000         ; * @file     startup_LPC17xx.s
    3 00000000         ; * @brief    CMSIS Cortex-M3 Core Device Startup File f
                       or
    4 00000000         ; *           NXP LPC17xx Device Series
    5 00000000         ; * @version  V1.10
    6 00000000         ; * @date     06. April 2011
    7 00000000         ; *
    8 00000000         ; * @note
    9 00000000         ; * Copyright (C) 2009-2011 ARM Limited. All rights rese
                       rved.
   10 00000000         ; *
   11 00000000         ; * @par
   12 00000000         ; * ARM Limited (ARM) is supplying this software for use
                        with Cortex-M
   13 00000000         ; * processor based microcontrollers.  This file can be 
                       freely distributed
   14 00000000         ; * within development tools that are supporting such AR
                       M based processors.
   15 00000000         ; *
   16 00000000         ; * @par
   17 00000000         ; * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, W
                       HETHER EXPRESS, IMPLIED
   18 00000000         ; * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
                        WARRANTIES OF
   19 00000000         ; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                        APPLY TO THIS SOFTWARE.
   20 00000000         ; * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR S
                       PECIAL, INCIDENTAL, OR
   21 00000000         ; * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   22 00000000         ; *
   23 00000000         ; ******************************************************
                       ************************/
   24 00000000         
   25 00000000         ; *------- <<< Use Configuration Wizard in Context Menu 
                       >>> ------------------
   26 00000000         
   27 00000000         ; <h> Stack Configuration
   28 00000000         ;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   29 00000000         ; </h>
   30 00000000         
   31 00000000 00000200 
                       Stack_Size
                               EQU              0x00000200
   32 00000000         
   33 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   34 00000000         Stack_Mem
                               SPACE            Stack_Size
   35 00000200         __initial_sp
   36 00000200         
   37 00000200         
   38 00000200         ; <h> Heap Configuration
   39 00000200         ;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   40 00000200         ; </h>
   41 00000200         
   42 00000200 00000000 
                       Heap_Size



ARM Macro Assembler    Page 2 


                               EQU              0x00000000
   43 00000200         
   44 00000200                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   45 00000000         __heap_base
   46 00000000         Heap_Mem
                               SPACE            Heap_Size
   47 00000000         __heap_limit
   48 00000000         
   49 00000000         
   50 00000000                 PRESERVE8
   51 00000000                 THUMB
   52 00000000         
   53 00000000         
   54 00000000         ; Vector Table Mapped to Address 0 at Reset
   55 00000000         
   56 00000000                 AREA             RESET, DATA, READONLY
   57 00000000                 EXPORT           __Vectors
   58 00000000         
   59 00000000 00000000 
                       __Vectors
                               DCD              __initial_sp ; Top of Stack
   60 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   61 00000008 00000000        DCD              NMI_Handler ; NMI Handler
   62 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
   63 00000010 00000000        DCD              MemManage_Handler 
                                                            ; MPU Fault Handler
                                                            
   64 00000014 00000000        DCD              BusFault_Handler 
                                                            ; Bus Fault Handler
                                                            
   65 00000018 00000000        DCD              UsageFault_Handler ; Usage Faul
                                                            t Handler
   66 0000001C 00000000        DCD              0           ; Reserved
   67 00000020 00000000        DCD              0           ; Reserved
   68 00000024 00000000        DCD              0           ; Reserved
   69 00000028 00000000        DCD              0           ; Reserved
   70 0000002C 00000000        DCD              SVC_Handler ; SVCall Handler
   71 00000030 00000000        DCD              DebugMon_Handler ; Debug Monito
                                                            r Handler
   72 00000034 00000000        DCD              0           ; Reserved
   73 00000038 00000000        DCD              PendSV_Handler ; PendSV Handler
                                                            
   74 0000003C 00000000        DCD              SysTick_Handler 
                                                            ; SysTick Handler
   75 00000040         
   76 00000040         ; External Interrupts
   77 00000040 00000000        DCD              WDT_IRQHandler ; 16: Watchdog T
                                                            imer
   78 00000044 00000000        DCD              TIMER0_IRQHandler ; 17: Timer0
   79 00000048 00000000        DCD              TIMER1_IRQHandler ; 18: Timer1
   80 0000004C 00000000        DCD              TIMER2_IRQHandler ; 19: Timer2
   81 00000050 00000000        DCD              TIMER3_IRQHandler ; 20: Timer3
   82 00000054 00000000        DCD              UART0_IRQHandler ; 21: UART0
   83 00000058 00000000        DCD              UART1_IRQHandler ; 22: UART1
   84 0000005C 00000000        DCD              UART2_IRQHandler ; 23: UART2
   85 00000060 00000000        DCD              UART3_IRQHandler ; 24: UART3
   86 00000064 00000000        DCD              PWM1_IRQHandler ; 25: PWM1



ARM Macro Assembler    Page 3 


   87 00000068 00000000        DCD              I2C0_IRQHandler ; 26: I2C0
   88 0000006C 00000000        DCD              I2C1_IRQHandler ; 27: I2C1
   89 00000070 00000000        DCD              I2C2_IRQHandler ; 28: I2C2
   90 00000074 00000000        DCD              SPI_IRQHandler ; 29: SPI
   91 00000078 00000000        DCD              SSP0_IRQHandler ; 30: SSP0
   92 0000007C 00000000        DCD              SSP1_IRQHandler ; 31: SSP1
   93 00000080 00000000        DCD              PLL0_IRQHandler ; 32: PLL0 Lock
                                                             (Main PLL)
   94 00000084 00000000        DCD              RTC_IRQHandler ; 33: Real Time 
                                                            Clock
   95 00000088 00000000        DCD              EINT0_IRQHandler ; 34: External
                                                             Interrupt 0
   96 0000008C 00000000        DCD              EINT1_IRQHandler ; 35: External
                                                             Interrupt 1
   97 00000090 00000000        DCD              EINT2_IRQHandler ; 36: External
                                                             Interrupt 2
   98 00000094 00000000        DCD              EINT3_IRQHandler ; 37: External
                                                             Interrupt 3
   99 00000098 00000000        DCD              ADC_IRQHandler 
                                                            ; 38: A/D Converter
                                                            
  100 0000009C 00000000        DCD              BOD_IRQHandler ; 39: Brown-Out 
                                                            Detect
  101 000000A0 00000000        DCD              USB_IRQHandler ; 40: USB
  102 000000A4 00000000        DCD              CAN_IRQHandler ; 41: CAN
  103 000000A8 00000000        DCD              DMA_IRQHandler ; 42: General Pu
                                                            rpose DMA
  104 000000AC 00000000        DCD              I2S_IRQHandler ; 43: I2S
  105 000000B0 00000000        DCD              ENET_IRQHandler ; 44: Ethernet
  106 000000B4 00000000        DCD              RIT_IRQHandler ; 45: Repetitive
                                                             Interrupt Timer
  107 000000B8 00000000        DCD              MCPWM_IRQHandler ; 46: Motor Co
                                                            ntrol PWM
  108 000000BC 00000000        DCD              QEI_IRQHandler ; 47: Quadrature
                                                             Encoder Interface
  109 000000C0 00000000        DCD              PLL1_IRQHandler ; 48: PLL1 Lock
                                                             (USB PLL)
  110 000000C4 00000000        DCD              USBActivity_IRQHandler ; 49: US
                                                            B Activity interrup
                                                            t to wakeup
  111 000000C8 00000000        DCD              CANActivity_IRQHandler ; 50: CA
                                                            N Activity interrup
                                                            t to wakeup
  112 000000CC         
  113 000000CC         
  114 000000CC                 IF               :LNOT::DEF:NO_CRP
  115 000000CC                 AREA             |.ARM.__at_0x02FC|, CODE, READO
NLY
  116 00000000 FFFFFFFF 
                       CRP_Key DCD              0xFFFFFFFF
  117 00000004                 ENDIF
  118 00000004         
  119 00000004                 AREA             Static_data, DATA, READONLY, AL
IGN=3
  120 00000000         
  121 00000000 00000001 
              0000001E 
              00000002 
              00000046 



ARM Macro Assembler    Page 4 


              00000003 
              000000C8 
              00000004 
              0000002A 
              00000005 
              00000051 Ingredient_calories
                               DCD              0x01, 30, 0x02, 70, 0x03, 200, 
0x04, 42, 0x05, 81
  122 00000028 00000006 
              00000014         DCD              0x06, 20
  123 00000030 00000002 
              00000032 
              00000005 
              00000003 
              00000003 
              0000000A 
              00000001 
              00000005 
              00000004 Ingredient_quantity
                               DCD              0x02, 50, 0x05, 3, 0x03, 10, 0x
01, 5, 0x04
  124 00000054 00000008 
              00000006 
              0000001E         DCD              8, 0x06, 30
  125 00000060         
  126 00000060                 AREA             Result, DATA,READWRITE, ALIGN=3
  127 00000000         
  128 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 Calories_ordered
                               SPACE            6*4
  129 00000018 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 Quantity_ordered
                               SPACE            6*4
  130 00000030         
  131 00000030 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 ordered1
                               SPACE            12*4
  132 00000060 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 ordered2
                               SPACE            12*4
  133 00000090         
  134 00000090         
  135 00000090                 AREA             |.text|, CODE, READONLY, align=
3
  136 00000000         
  137 00000000         ; Reset Handler
  138 00000000         
  139 00000000         ; definition of symbolic constants
  140 00000000 0000000C 
                       ELEMENTS
                               EQU              12
  141 00000000         
  142 00000000         ; Register alias
  143 00000000        0 
                       calories
                               RN               0           ; R0 -> calories
  144 00000000        1 
                       ordered_cal
                               RN               1           ; R1 -> ordered_cal
                                                            
  145 00000000        2 
                       quantity
                               RN               2           ; R2 -> quantity
  146 00000000        3 
                       ordered_qt
                               RN               3           ; R3 -> ordered_qt
  147 00000000        4 
                       i       RN               4           ; R4 -> i
  148 00000000        5 
                       j       RN               5           ; R5 -> j
  149 00000000         
  150 00000000         
  151 00000000         Reset_Handler
                               PROC
  152 00000000                 EXPORT           Reset_Handler             [WEAK
]
  153 00000000         
  154 00000000 484A            LDR              calories, =Ingredient_calories



ARM Macro Assembler    Page 6 


  155 00000002 494B            LDR              ordered_cal, =ordered1
  156 00000004 4A4B            LDR              quantity, =Ingredient_quantity
  157 00000006 4B4C            LDR              ordered_qt, =ordered2
  158 00000008         
  159 00000008 F04F 0400       MOV              i, #0
  160 0000000C F04F 0500       MOV              j, #0
  161 00000010         
  162 00000010         ; your code here
  163 00000010 F850 6024 
                       ciclo   LDR              r6, [calories, i, lsl #2] ; in 
                                                            questo ciclo ho cop
                                                            iato il vettore nel
                                                            l'area readwrite
  164 00000014 F841 6024       STR              r6, [ordered_cal, i, lsl #2]
  165 00000018         
  166 00000018 F104 0401       add              i, i, #1
  167 0000001C 2C0C            cmp              i, #ELEMENTS
  168 0000001E D3F7            blo              ciclo
  169 00000020 F04F 0400       mov              i, #0
  170 00000024         
  171 00000024         ; ora posso procedere all'ordinamento
  172 00000024 EB05 0B04 
                       ciclo_j add              r11,j,i     ; sommo i e j
  173 00000028 F1BB 0F09       cmp              r11,#9      ; confronto 11 con 
                                                            i+j
  174 0000002C BFA8 2500       movge            j, #0
  175 00000030 DA12            bge              ciclo_i
  176 00000032 F105 0601       add              r6,j,#1
  177 00000036 F851 7025       LDR              r7, [ordered_cal, j, lsl #2] 
                                                            ; ordered_cal[j]
  178 0000003A F851 8026       LDR              r8, [ordered_cal, r6, lsl #2] 
                                                            ; ordered_cal[j+1]
  179 0000003E F106 0601       add              r6,r6,#1
  180 00000042 F851 9026       LDR              r9, [ordered_cal, r6, lsl #2] 
                                                            ; ordered_cal[j+2]
  181 00000046 F106 0601       add              r6,r6,#1
  182 0000004A F851 A026       LDR              r10, [ordered_cal, r6, lsl #2] 
                                                            ; ordered_cal[j+3]
  183 0000004E 45D0            cmp              r8,r10
  184 00000050 D30B            blo              if_condition
  185 00000052 F105 0502       add              j, j, #2    ; incremento j
  186 00000056 E7E5            b                ciclo_j
  187 00000058         
  188 00000058 F104 0401 
                       ciclo_i add              i, i, #1
  189 0000005C 2C0C            cmp              i,#ELEMENTS
  190 0000005E D3E1            blo              ciclo_j
  191 00000060 F04F 0400       mov              i, #0
  192 00000064 F04F 0500       mov              j, #0
  193 00000068 E010            b                ciclo_2
  194 0000006A         
  195 0000006A F841 9025 
                       if_condition
                               STR              r9, [ordered_cal, j, lsl #2] ; 
                                                             ordered_cal[j]=ord
                                                            ered_cal[j+2];
  196 0000006E F1A6 0602       sub              r6, r6, #2
  197 00000072 F841 A026       STR              r10, [ordered_cal, r6, lsl #2] 
                                                            ;  ordered_cal[j+1]



ARM Macro Assembler    Page 7 


                                                            =ordered_cal[j+3];
  198 00000076 F106 0601       add              r6, r6, #1
  199 0000007A F841 7026       STR              r7, [ordered_cal, r6, lsl #2] ;
                                                              ordered_cal[j+2]=
                                                            tmp2
  200 0000007E F106 0601       add              r6, r6, #1
  201 00000082 F841 8026       STR              r8, [ordered_cal, r6, lsl #2] ;
                                                              ordered_cal[j+3]=
                                                            tmp1
  202 00000086 F105 0502       add              j, j, #2    ; incremento j
  203 0000008A E7CB            b                ciclo_j
  204 0000008C         
  205 0000008C         ; ordino l'altro vettore
  206 0000008C         
  207 0000008C F852 6024 
                       ciclo_2 LDR              r6, [quantity, i, lsl #2] ; in 
                                                            questo ciclo ho cop
                                                            iato il vettore nel
                                                            l'area readwrite
  208 00000090 F843 6024       STR              r6, [ordered_qt, i, lsl #2]
  209 00000094         
  210 00000094 F104 0401       add              i, i, #1
  211 00000098 2C0C            cmp              i, #ELEMENTS
  212 0000009A D3F7            blo              ciclo_2
  213 0000009C F04F 0400       mov              i, #0
  214 000000A0         
  215 000000A0         ; ora posso procedere all'ordinamento
  216 000000A0 EB05 0B04 
                       ciclo_j_2
                               add              r11,j,i     ; sommo i e j
  217 000000A4 F1BB 0F09       cmp              r11,#9      ; confronto 11 con 
                                                            i+j
  218 000000A8 BFA8 2500       movge            j, #0
  219 000000AC DA12            bge              ciclo_i_2
  220 000000AE         ;mov r6,j
  221 000000AE F105 0601       add              r6,j,#1
  222 000000B2 F853 7025       LDR              r7, [ordered_qt, j, lsl #2] 
                                                            ; ordered_qt[j]
  223 000000B6 F853 8026       LDR              r8, [ordered_qt, r6, lsl #2] 
                                                            ; ordered_qt[j+1]
  224 000000BA F106 0601       add              r6,r6,#1
  225 000000BE F853 9026       LDR              r9, [ordered_qt, r6, lsl #2] 
                                                            ; ordered_qt[j+2]
  226 000000C2 F106 0601       add              r6,r6,#1
  227 000000C6 F853 A026       LDR              r10, [ordered_qt, r6, lsl #2] 
                                                            ; ordered_qt[j+3]
  228 000000CA 45D0            cmp              r8,r10
  229 000000CC D30B            blo              if_condition_2
  230 000000CE F105 0502       add              j, j, #2    ; incremento j
  231 000000D2 E7E5            b                ciclo_j_2
  232 000000D4         
  233 000000D4 F104 0401 
                       ciclo_i_2
                               add              i, i, #1
  234 000000D8 2C0C            cmp              i,#ELEMENTS
  235 000000DA D3E1            blo              ciclo_j_2
  236 000000DC F04F 0400       mov              i, #0
  237 000000E0 F04F 0500       mov              j, #0
  238 000000E4 E010            b                save



ARM Macro Assembler    Page 8 


  239 000000E6         
  240 000000E6 F843 9025 
                       if_condition_2
                               STR              r9, [ordered_qt, j, lsl #2] ;  
                                                            ordered_qt[j]=order
                                                            ed_qt[j+2];
  241 000000EA F1A6 0602       sub              r6, r6, #2
  242 000000EE F843 A026       STR              r10, [ordered_qt, r6, lsl #2] ;
                                                              ordered_qt[j+1]=o
                                                            rdered_qt[j+3];
  243 000000F2 F106 0601       add              r6, r6, #1
  244 000000F6 F843 7026       STR              r7, [ordered_qt, r6, lsl #2] ; 
                                                             ordered_qt[j+2]=tm
                                                            p2
  245 000000FA F106 0601       add              r6, r6, #1
  246 000000FE F843 8026       STR              r8, [ordered_qt, r6, lsl #2] ; 
                                                             ordered_qt[j+3]=tm
                                                            p1
  247 00000102 F105 0502       add              j, j, #2    ; incremento j
  248 00000106 E7CB            b                ciclo_j_2
  249 00000108         
  250 00000108 480C    save    LDR              calories, =Calories_ordered
  251 0000010A 4A0D            LDR              quantity, =Quantity_ordered
  252 0000010C F851 6024       LDR              r6, [ordered_cal, i, lsl #2]
  253 00000110 F853 7024       LDR              r7, [ordered_qt, i, lsl #2]
  254 00000114 F840 6025       STR              r6, [calories, j, lsl #2]
  255 00000118 F842 7025       STR              r7, [quantity, j, lsl #2]
  256 0000011C F104 0402       add              i, i, #2
  257 00000120 F105 0501       add              j, j, #1
  258 00000124 2C0C            cmp              i, #ELEMENTS
  259 00000126 D3EF            blo              save
  260 00000128 E7FF            b                fine
  261 0000012A         
  262 0000012A         
  263 0000012A 4700    fine    BX               R0
  264 0000012C                 ENDP
  265 0000012C         
  266 0000012C         
  267 0000012C         ;for (i = 0; i < 12; i++) {   // loop n times - 1 per el
                       ement
  268 0000012C         ;    for (j = 0; j < 12 - i - 1; j=j+2) { // last i elem
                       ents are sorted already
  269 0000012C         ;        if (a[j+1] < a[j + 3]) {  // swop if order is b
                       roken
  270 0000012C         ;           tmp1 = a[j+1];
  271 0000012C         ;           tmp2 = a[j];
  272 0000012C         ;           a[j]=a[j+2];
  273 0000012C         ;           a[j+1]=a[j+3];
  274 0000012C         ;           a[j+2]=tmp2;
  275 0000012C         ;           a[j+3]=tmp1;
  276 0000012C         ;        }
  277 0000012C         ;       if (b[j+1] < b[j + 3]) {  // swop if order is br
                       oken
  278 0000012C         ;           tmp1 = b[j+1];
  279 0000012C         ;           tmp2 = b[j];
  280 0000012C         ;           b[j]=b[j+2];
  281 0000012C         ;           b[j+1]=b[j+3];
  282 0000012C         ;           b[j+2]=tmp2;
  283 0000012C         ;           b[j+3]=tmp1;



ARM Macro Assembler    Page 9 


  284 0000012C         ;        }
  285 0000012C         ;    }
  286 0000012C         ;}
  287 0000012C         
  288 0000012C         
  289 0000012C         
  290 0000012C         
  291 0000012C         
  292 0000012C 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000         LTORG
  293 00000144         
  294 00000144         
  295 00000144         ; Dummy Exception Handlers (infinite loops which can be 
                       modified)
  296 00000144         
  297 00000144         NMI_Handler
                               PROC
  298 00000144                 EXPORT           NMI_Handler               [WEAK
]
  299 00000144 E7FE            B                .
  300 00000146                 ENDP
  302 00000146         HardFault_Handler
                               PROC
  303 00000146                 EXPORT           HardFault_Handler         [WEAK
]
  304 00000146 E7FE            B                .
  305 00000148                 ENDP
  307 00000148         MemManage_Handler
                               PROC
  308 00000148                 EXPORT           MemManage_Handler         [WEAK
]
  309 00000148 E7FE            B                .
  310 0000014A                 ENDP
  312 0000014A         BusFault_Handler
                               PROC
  313 0000014A                 EXPORT           BusFault_Handler          [WEAK
]
  314 0000014A E7FE            B                .
  315 0000014C                 ENDP
  317 0000014C         UsageFault_Handler
                               PROC
  318 0000014C                 EXPORT           UsageFault_Handler        [WEAK
]
  319 0000014C E7FE            B                .
  320 0000014E                 ENDP
  321 0000014E         SVC_Handler
                               PROC
  322 0000014E                 EXPORT           SVC_Handler               [WEAK
]
  323 0000014E E7FE            B                .
  324 00000150                 ENDP
  326 00000150         DebugMon_Handler
                               PROC
  327 00000150                 EXPORT           DebugMon_Handler          [WEAK
]



ARM Macro Assembler    Page 10 


  328 00000150 E7FE            B                .
  329 00000152                 ENDP
  330 00000152         PendSV_Handler
                               PROC
  331 00000152                 EXPORT           PendSV_Handler            [WEAK
]
  332 00000152 E7FE            B                .
  333 00000154                 ENDP
  334 00000154         SysTick_Handler
                               PROC
  335 00000154                 EXPORT           SysTick_Handler           [WEAK
]
  336 00000154 E7FE            B                .
  337 00000156                 ENDP
  338 00000156         
  339 00000156         Default_Handler
                               PROC
  340 00000156         
  341 00000156                 EXPORT           WDT_IRQHandler            [WEAK
]
  342 00000156                 EXPORT           TIMER0_IRQHandler         [WEAK
]
  343 00000156                 EXPORT           TIMER1_IRQHandler         [WEAK
]
  344 00000156                 EXPORT           TIMER2_IRQHandler         [WEAK
]
  345 00000156                 EXPORT           TIMER3_IRQHandler         [WEAK
]
  346 00000156                 EXPORT           UART0_IRQHandler          [WEAK
]
  347 00000156                 EXPORT           UART1_IRQHandler          [WEAK
]
  348 00000156                 EXPORT           UART2_IRQHandler          [WEAK
]
  349 00000156                 EXPORT           UART3_IRQHandler          [WEAK
]
  350 00000156                 EXPORT           PWM1_IRQHandler           [WEAK
]
  351 00000156                 EXPORT           I2C0_IRQHandler           [WEAK
]
  352 00000156                 EXPORT           I2C1_IRQHandler           [WEAK
]
  353 00000156                 EXPORT           I2C2_IRQHandler           [WEAK
]
  354 00000156                 EXPORT           SPI_IRQHandler            [WEAK
]
  355 00000156                 EXPORT           SSP0_IRQHandler           [WEAK
]
  356 00000156                 EXPORT           SSP1_IRQHandler           [WEAK
]
  357 00000156                 EXPORT           PLL0_IRQHandler           [WEAK
]
  358 00000156                 EXPORT           RTC_IRQHandler            [WEAK
]
  359 00000156                 EXPORT           EINT0_IRQHandler          [WEAK
]
  360 00000156                 EXPORT           EINT1_IRQHandler          [WEAK
]
  361 00000156                 EXPORT           EINT2_IRQHandler          [WEAK



ARM Macro Assembler    Page 11 


]
  362 00000156                 EXPORT           EINT3_IRQHandler          [WEAK
]
  363 00000156                 EXPORT           ADC_IRQHandler            [WEAK
]
  364 00000156                 EXPORT           BOD_IRQHandler            [WEAK
]
  365 00000156                 EXPORT           USB_IRQHandler            [WEAK
]
  366 00000156                 EXPORT           CAN_IRQHandler            [WEAK
]
  367 00000156                 EXPORT           DMA_IRQHandler            [WEAK
]
  368 00000156                 EXPORT           I2S_IRQHandler            [WEAK
]
  369 00000156                 EXPORT           ENET_IRQHandler           [WEAK
]
  370 00000156                 EXPORT           RIT_IRQHandler            [WEAK
]
  371 00000156                 EXPORT           MCPWM_IRQHandler          [WEAK
]
  372 00000156                 EXPORT           QEI_IRQHandler            [WEAK
]
  373 00000156                 EXPORT           PLL1_IRQHandler           [WEAK
]
  374 00000156                 EXPORT           USBActivity_IRQHandler    [WEAK
]
  375 00000156                 EXPORT           CANActivity_IRQHandler    [WEAK
]
  376 00000156         
  377 00000156         WDT_IRQHandler
  378 00000156         TIMER0_IRQHandler
  379 00000156         TIMER1_IRQHandler
  380 00000156         TIMER2_IRQHandler
  381 00000156         TIMER3_IRQHandler
  382 00000156         UART0_IRQHandler
  383 00000156         UART1_IRQHandler
  384 00000156         UART2_IRQHandler
  385 00000156         UART3_IRQHandler
  386 00000156         PWM1_IRQHandler
  387 00000156         I2C0_IRQHandler
  388 00000156         I2C1_IRQHandler
  389 00000156         I2C2_IRQHandler
  390 00000156         SPI_IRQHandler
  391 00000156         SSP0_IRQHandler
  392 00000156         SSP1_IRQHandler
  393 00000156         PLL0_IRQHandler
  394 00000156         RTC_IRQHandler
  395 00000156         EINT0_IRQHandler
  396 00000156         EINT1_IRQHandler
  397 00000156         EINT2_IRQHandler
  398 00000156         EINT3_IRQHandler
  399 00000156         ADC_IRQHandler
  400 00000156         BOD_IRQHandler
  401 00000156         USB_IRQHandler
  402 00000156         CAN_IRQHandler
  403 00000156         DMA_IRQHandler
  404 00000156         I2S_IRQHandler
  405 00000156         ENET_IRQHandler



ARM Macro Assembler    Page 12 


  406 00000156         RIT_IRQHandler
  407 00000156         MCPWM_IRQHandler
  408 00000156         QEI_IRQHandler
  409 00000156         PLL1_IRQHandler
  410 00000156         USBActivity_IRQHandler
  411 00000156         CANActivity_IRQHandler
  412 00000156         
  413 00000156 E7FE            B                .
  414 00000158         
  415 00000158                 ENDP
  416 00000158         
  417 00000158         
  418 00000158                 ALIGN
  419 00000158         
  420 00000158         
  421 00000158         ; User Initial Stack & Heap
  422 00000158         
  423 00000158                 EXPORT           __initial_sp
  424 00000158                 EXPORT           __heap_base
  425 00000158                 EXPORT           __heap_limit
  426 00000158         
  427 00000158                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\startup.d -o.\startup.o -I.\RTE\_Target_1 -IC:\Users\ASUS\AppDat
a\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\ASUS\AppData\Lo
cal\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Include --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefin
e="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\startup.lst startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 33 in file startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 34 in file startup.s
   Uses
      None
Comment: Stack_Mem unused
__initial_sp 00000200

Symbol: __initial_sp
   Definitions
      At line 35 in file startup.s
   Uses
      At line 59 in file startup.s
      At line 423 in file startup.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 44 in file startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 46 in file startup.s
   Uses
      None
Comment: Heap_Mem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 45 in file startup.s
   Uses
      At line 424 in file startup.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 47 in file startup.s
   Uses
      At line 425 in file startup.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 56 in file startup.s
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 59 in file startup.s
   Uses
      At line 57 in file startup.s
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.ARM.__at_0x02FC 00000000

Symbol: .ARM.__at_0x02FC
   Definitions
      At line 115 in file startup.s
   Uses
      None
Comment: .ARM.__at_0x02FC unused
CRP_Key 00000000

Symbol: CRP_Key
   Definitions
      At line 116 in file startup.s
   Uses
      None
Comment: CRP_Key unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Ingredient_calories 00000000

Symbol: Ingredient_calories
   Definitions
      At line 121 in file startup.s
   Uses
      At line 154 in file startup.s
Comment: Ingredient_calories used once
Ingredient_quantity 00000030

Symbol: Ingredient_quantity
   Definitions
      At line 123 in file startup.s
   Uses
      At line 156 in file startup.s
Comment: Ingredient_quantity used once
Static_data 00000000

Symbol: Static_data
   Definitions
      At line 119 in file startup.s
   Uses
      None
Comment: Static_data unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Calories_ordered 00000000

Symbol: Calories_ordered
   Definitions
      At line 128 in file startup.s
   Uses
      At line 250 in file startup.s
Comment: Calories_ordered used once
Quantity_ordered 00000018

Symbol: Quantity_ordered
   Definitions
      At line 129 in file startup.s
   Uses
      At line 251 in file startup.s
Comment: Quantity_ordered used once
Result 00000000

Symbol: Result
   Definitions
      At line 126 in file startup.s
   Uses
      None
Comment: Result unused
ordered1 00000030

Symbol: ordered1
   Definitions
      At line 131 in file startup.s
   Uses
      At line 155 in file startup.s
Comment: ordered1 used once
ordered2 00000060

Symbol: ordered2
   Definitions
      At line 132 in file startup.s
   Uses
      At line 157 in file startup.s
Comment: ordered2 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 135 in file startup.s
   Uses
      None
Comment: .text unused
ADC_IRQHandler 00000156

Symbol: ADC_IRQHandler
   Definitions
      At line 399 in file startup.s
   Uses
      At line 99 in file startup.s
      At line 363 in file startup.s

BOD_IRQHandler 00000156

Symbol: BOD_IRQHandler
   Definitions
      At line 400 in file startup.s
   Uses
      At line 100 in file startup.s
      At line 364 in file startup.s

BusFault_Handler 0000014A

Symbol: BusFault_Handler
   Definitions
      At line 312 in file startup.s
   Uses
      At line 64 in file startup.s
      At line 313 in file startup.s

CANActivity_IRQHandler 00000156

Symbol: CANActivity_IRQHandler
   Definitions
      At line 411 in file startup.s
   Uses
      At line 111 in file startup.s
      At line 375 in file startup.s

CAN_IRQHandler 00000156

Symbol: CAN_IRQHandler
   Definitions
      At line 402 in file startup.s
   Uses
      At line 102 in file startup.s
      At line 366 in file startup.s

DMA_IRQHandler 00000156

Symbol: DMA_IRQHandler
   Definitions
      At line 403 in file startup.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 103 in file startup.s
      At line 367 in file startup.s

DebugMon_Handler 00000150

Symbol: DebugMon_Handler
   Definitions
      At line 326 in file startup.s
   Uses
      At line 71 in file startup.s
      At line 327 in file startup.s

Default_Handler 00000156

Symbol: Default_Handler
   Definitions
      At line 339 in file startup.s
   Uses
      None
Comment: Default_Handler unused
EINT0_IRQHandler 00000156

Symbol: EINT0_IRQHandler
   Definitions
      At line 395 in file startup.s
   Uses
      At line 95 in file startup.s
      At line 359 in file startup.s

EINT1_IRQHandler 00000156

Symbol: EINT1_IRQHandler
   Definitions
      At line 396 in file startup.s
   Uses
      At line 96 in file startup.s
      At line 360 in file startup.s

EINT2_IRQHandler 00000156

Symbol: EINT2_IRQHandler
   Definitions
      At line 397 in file startup.s
   Uses
      At line 97 in file startup.s
      At line 361 in file startup.s

EINT3_IRQHandler 00000156

Symbol: EINT3_IRQHandler
   Definitions
      At line 398 in file startup.s
   Uses
      At line 98 in file startup.s
      At line 362 in file startup.s

ENET_IRQHandler 00000156

Symbol: ENET_IRQHandler



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 405 in file startup.s
   Uses
      At line 105 in file startup.s
      At line 369 in file startup.s

HardFault_Handler 00000146

Symbol: HardFault_Handler
   Definitions
      At line 302 in file startup.s
   Uses
      At line 62 in file startup.s
      At line 303 in file startup.s

I2C0_IRQHandler 00000156

Symbol: I2C0_IRQHandler
   Definitions
      At line 387 in file startup.s
   Uses
      At line 87 in file startup.s
      At line 351 in file startup.s

I2C1_IRQHandler 00000156

Symbol: I2C1_IRQHandler
   Definitions
      At line 388 in file startup.s
   Uses
      At line 88 in file startup.s
      At line 352 in file startup.s

I2C2_IRQHandler 00000156

Symbol: I2C2_IRQHandler
   Definitions
      At line 389 in file startup.s
   Uses
      At line 89 in file startup.s
      At line 353 in file startup.s

I2S_IRQHandler 00000156

Symbol: I2S_IRQHandler
   Definitions
      At line 404 in file startup.s
   Uses
      At line 104 in file startup.s
      At line 368 in file startup.s

MCPWM_IRQHandler 00000156

Symbol: MCPWM_IRQHandler
   Definitions
      At line 407 in file startup.s
   Uses
      At line 107 in file startup.s
      At line 371 in file startup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


MemManage_Handler 00000148

Symbol: MemManage_Handler
   Definitions
      At line 307 in file startup.s
   Uses
      At line 63 in file startup.s
      At line 308 in file startup.s

NMI_Handler 00000144

Symbol: NMI_Handler
   Definitions
      At line 297 in file startup.s
   Uses
      At line 61 in file startup.s
      At line 298 in file startup.s

PLL0_IRQHandler 00000156

Symbol: PLL0_IRQHandler
   Definitions
      At line 393 in file startup.s
   Uses
      At line 93 in file startup.s
      At line 357 in file startup.s

PLL1_IRQHandler 00000156

Symbol: PLL1_IRQHandler
   Definitions
      At line 409 in file startup.s
   Uses
      At line 109 in file startup.s
      At line 373 in file startup.s

PWM1_IRQHandler 00000156

Symbol: PWM1_IRQHandler
   Definitions
      At line 386 in file startup.s
   Uses
      At line 86 in file startup.s
      At line 350 in file startup.s

PendSV_Handler 00000152

Symbol: PendSV_Handler
   Definitions
      At line 330 in file startup.s
   Uses
      At line 73 in file startup.s
      At line 331 in file startup.s

QEI_IRQHandler 00000156

Symbol: QEI_IRQHandler
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 408 in file startup.s
   Uses
      At line 108 in file startup.s
      At line 372 in file startup.s

RIT_IRQHandler 00000156

Symbol: RIT_IRQHandler
   Definitions
      At line 406 in file startup.s
   Uses
      At line 106 in file startup.s
      At line 370 in file startup.s

RTC_IRQHandler 00000156

Symbol: RTC_IRQHandler
   Definitions
      At line 394 in file startup.s
   Uses
      At line 94 in file startup.s
      At line 358 in file startup.s

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 151 in file startup.s
   Uses
      At line 60 in file startup.s
      At line 152 in file startup.s

SPI_IRQHandler 00000156

Symbol: SPI_IRQHandler
   Definitions
      At line 390 in file startup.s
   Uses
      At line 90 in file startup.s
      At line 354 in file startup.s

SSP0_IRQHandler 00000156

Symbol: SSP0_IRQHandler
   Definitions
      At line 391 in file startup.s
   Uses
      At line 91 in file startup.s
      At line 355 in file startup.s

SSP1_IRQHandler 00000156

Symbol: SSP1_IRQHandler
   Definitions
      At line 392 in file startup.s
   Uses
      At line 92 in file startup.s
      At line 356 in file startup.s




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

SVC_Handler 0000014E

Symbol: SVC_Handler
   Definitions
      At line 321 in file startup.s
   Uses
      At line 70 in file startup.s
      At line 322 in file startup.s

SysTick_Handler 00000154

Symbol: SysTick_Handler
   Definitions
      At line 334 in file startup.s
   Uses
      At line 74 in file startup.s
      At line 335 in file startup.s

TIMER0_IRQHandler 00000156

Symbol: TIMER0_IRQHandler
   Definitions
      At line 378 in file startup.s
   Uses
      At line 78 in file startup.s
      At line 342 in file startup.s

TIMER1_IRQHandler 00000156

Symbol: TIMER1_IRQHandler
   Definitions
      At line 379 in file startup.s
   Uses
      At line 79 in file startup.s
      At line 343 in file startup.s

TIMER2_IRQHandler 00000156

Symbol: TIMER2_IRQHandler
   Definitions
      At line 380 in file startup.s
   Uses
      At line 80 in file startup.s
      At line 344 in file startup.s

TIMER3_IRQHandler 00000156

Symbol: TIMER3_IRQHandler
   Definitions
      At line 381 in file startup.s
   Uses
      At line 81 in file startup.s
      At line 345 in file startup.s

UART0_IRQHandler 00000156

Symbol: UART0_IRQHandler
   Definitions
      At line 382 in file startup.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 82 in file startup.s
      At line 346 in file startup.s

UART1_IRQHandler 00000156

Symbol: UART1_IRQHandler
   Definitions
      At line 383 in file startup.s
   Uses
      At line 83 in file startup.s
      At line 347 in file startup.s

UART2_IRQHandler 00000156

Symbol: UART2_IRQHandler
   Definitions
      At line 384 in file startup.s
   Uses
      At line 84 in file startup.s
      At line 348 in file startup.s

UART3_IRQHandler 00000156

Symbol: UART3_IRQHandler
   Definitions
      At line 385 in file startup.s
   Uses
      At line 85 in file startup.s
      At line 349 in file startup.s

USBActivity_IRQHandler 00000156

Symbol: USBActivity_IRQHandler
   Definitions
      At line 410 in file startup.s
   Uses
      At line 110 in file startup.s
      At line 374 in file startup.s

USB_IRQHandler 00000156

Symbol: USB_IRQHandler
   Definitions
      At line 401 in file startup.s
   Uses
      At line 101 in file startup.s
      At line 365 in file startup.s

UsageFault_Handler 0000014C

Symbol: UsageFault_Handler
   Definitions
      At line 317 in file startup.s
   Uses
      At line 65 in file startup.s
      At line 318 in file startup.s

WDT_IRQHandler 00000156



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols


Symbol: WDT_IRQHandler
   Definitions
      At line 377 in file startup.s
   Uses
      At line 77 in file startup.s
      At line 341 in file startup.s

ciclo 00000010

Symbol: ciclo
   Definitions
      At line 163 in file startup.s
   Uses
      At line 168 in file startup.s
Comment: ciclo used once
ciclo_2 0000008C

Symbol: ciclo_2
   Definitions
      At line 207 in file startup.s
   Uses
      At line 193 in file startup.s
      At line 212 in file startup.s

ciclo_i 00000058

Symbol: ciclo_i
   Definitions
      At line 188 in file startup.s
   Uses
      At line 175 in file startup.s
Comment: ciclo_i used once
ciclo_i_2 000000D4

Symbol: ciclo_i_2
   Definitions
      At line 233 in file startup.s
   Uses
      At line 219 in file startup.s
Comment: ciclo_i_2 used once
ciclo_j 00000024

Symbol: ciclo_j
   Definitions
      At line 172 in file startup.s
   Uses
      At line 186 in file startup.s
      At line 190 in file startup.s
      At line 203 in file startup.s

ciclo_j_2 000000A0

Symbol: ciclo_j_2
   Definitions
      At line 216 in file startup.s
   Uses
      At line 231 in file startup.s
      At line 235 in file startup.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

      At line 248 in file startup.s

fine 0000012A

Symbol: fine
   Definitions
      At line 263 in file startup.s
   Uses
      At line 260 in file startup.s
Comment: fine used once
if_condition 0000006A

Symbol: if_condition
   Definitions
      At line 195 in file startup.s
   Uses
      At line 184 in file startup.s
Comment: if_condition used once
if_condition_2 000000E6

Symbol: if_condition_2
   Definitions
      At line 240 in file startup.s
   Uses
      At line 229 in file startup.s
Comment: if_condition_2 used once
save 00000108

Symbol: save
   Definitions
      At line 250 in file startup.s
   Uses
      At line 238 in file startup.s
      At line 259 in file startup.s

57 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ELEMENTS 0000000C

Symbol: ELEMENTS
   Definitions
      At line 140 in file startup.s
   Uses
      At line 167 in file startup.s
      At line 189 in file startup.s
      At line 211 in file startup.s
      At line 234 in file startup.s
      At line 258 in file startup.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 42 in file startup.s
   Uses
      At line 46 in file startup.s
Comment: Heap_Size used once
Stack_Size 00000200

Symbol: Stack_Size
   Definitions
      At line 31 in file startup.s
   Uses
      At line 34 in file startup.s
Comment: Stack_Size used once
3 symbols
423 symbols in table
